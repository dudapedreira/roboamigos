{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","Searchbox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2MAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,qDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA2BH,KAC/C,gCACC,6BAAKF,IACL,4BAAIC,WCcOK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKOC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKT,UAAW,MAAhB,SACA,uBACAA,UAAY,gCACZU,KAAK,SACLC,YAAa,gBACbC,SAAWH,OCEEI,EATA,SAACC,GACf,OACA,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,mBAAoBC,OAAQ,SAAvE,SACEJ,EAAMK,YCiBMC,E,kDAnBd,WAAaN,GAAQ,IAAD,8BACnB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHQ,E,qDAOrB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG3B,WACC,OAAIG,KAAKJ,MAAMC,SACP,oDAEDG,KAAKX,MAAMK,a,GAhBQQ,aCyCZC,E,kDApCd,aAAe,IAAD,8BACb,gBAaFC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACZjB,OAAQ,GACR2B,YAAa,IAJD,E,qDAQf,WAAqB,IAAD,OACnBG,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKZ,SAAS,CAAEtB,OAAQkC,S,oBAOzC,WAAU,IAAD,OACFC,EAAed,KAAKJ,MAAMjB,OAAOoC,QAAO,SAAAC,GAC9C,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKtB,MAAMU,YAAYW,kBAEhE,OACC,sBAAK1C,UAAY,KAAjB,UACA,sDACA,cAAC,EAAD,CAAWS,aAAgBgB,KAAKI,iBAFhC,IAGA,cAAC,EAAD,UACA,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAASmC,e,GA7BLZ,aCMHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.1291a79a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n\treturn (\n\t\t<div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'> \n\t\t\t<img alt='robot' src ={`https://robohash.org/${id}`}/>\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\t\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ({robots}) => {\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\trobots.map((user, i) => {\n\t\t\treturn ( \n\t\t\t<Card \n\t\t\tkey={i} \n\t\t\tid={robots[i].id} \n\t\t\tname={robots[i].name} \n\t\t\temail={robots[i].email} \n\t\t\t/>\n\t\t);\n\t\t})\n\t\t}\t\n\t  </div>\n\t);\t \n}\n\nexport default Cardlist;","import React from 'react';\n\nconst Searchbox = ({searchChange}) => {\n\treturn (\n\t\t<div className ='pa2'> \n\t\t<input \n\t\tclassName = 'pa2 ba b--green bg-light-blue'\n\t\ttype='search' \n\t\tplaceholder ='search robots'\n\t\tonChange= {searchChange}\n\t\t />\n\t\t</div> \n\t\t);\n}\n\nexport default Searchbox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn(\n\t<div style={{ overflowY: 'scroll', border: '10px solid black', height: '700px'}}>\n\t\t{props.children}\n\t</div>\n\t);\n};\n\n\nexport default Scroll; ","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\ncomponentDidCatch(error, info) {\n\tthis.setState({ hasError: true})\n}\n\nrender() {\n\tif (this.state.hasError) {\n\t\treturn <h1> foi mal. Quebrou </h1> \n\t}\n\treturn this.props.children\n}\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport Cardlist from '../components/Cardlist';\nimport Searchbox from '../components/Searchbox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: '',\n\t\t}\n\t}\n\ncomponentDidMount() {\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response=> response.json())\n\t\t.then(users => {this.setState({ robots: users })});\n\t}\t\n\nonSearchChange = (event) => {\n\tthis.setState({ searchfield: event.target.value })\n}\n\t\n\trender() {\n\t\tconst filterRobots = this.state.robots.filter(robot => {\n\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t});\n\t\treturn (\n\t\t\t<div className = \"tc\">\n\t\t\t<h1>Robos Amigos do Duda</h1>\n\t\t\t<Searchbox searchChange = {this.onSearchChange}/>`\n\t\t\t<Scroll>\n\t\t\t<ErrorBoundry>\n\t\t\t\t<Cardlist robots ={filterRobots}/>\n\t\t\t</ErrorBoundry>\n\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}